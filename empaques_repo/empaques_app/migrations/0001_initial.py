# Generated by Django 2.2 on 2019-07-03 15:00

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bodega',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Nombre de bodega', max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Ciudad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=30)),
                ('descripcion', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Clase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Clase del empaque (ej. Cilindros: C1, C2)', max_length=30)),
                ('descripcion', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Correo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('correo', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Custodio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Empaque',
            fields=[
                ('codigo', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('codigo_barras', models.CharField(max_length=12)),
                ('serie', models.CharField(max_length=12)),
                ('costo', models.FloatField(blank=True, help_text='En dolares', null=True)),
                ('precio', models.FloatField(blank=True, help_text='En dolares', null=True)),
                ('clase', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='empaques_app.Clase')),
                ('custodio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='empaques_app.Custodio')),
            ],
        ),
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('codigo', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=30)),
                ('RUC', models.CharField(max_length=13, validators=[django.core.validators.RegexValidator('[0-9]{13}')])),
                ('direccion', models.CharField(blank=True, max_length=50, null=True)),
                ('telefono', models.CharField(blank=True, max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Estado_disponibilidad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Ej. Lleno, Vacio, En Uso', max_length=20)),
                ('descripcion', models.CharField(blank=True, max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Estado_empaque',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Estado del empaque (bueno, danado, en reparacion...)', max_length=30)),
                ('descripcion', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Marca',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Nombre del fabricante del empaque', max_length=30)),
                ('descripcion', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Modelo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=40)),
                ('descripcion', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Orden',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(blank=True, max_length=30, null=True)),
                ('descripcion', models.CharField(blank=True, max_length=50, null=True)),
                ('fecha_creacion', models.DateTimeField(editable=False)),
                ('fecha_aprobacion', models.DateTimeField(blank=True, null=True)),
                ('aprobado', models.BooleanField(default=False)),
                ('fecha_inicio', models.DateField(blank=True, null=True)),
                ('dias_plazo', models.IntegerField(null=True)),
                ('fecha_final', models.DateField(blank=True, editable=False, null=True)),
                ('despachado', models.BooleanField(default=False)),
                ('completo', models.BooleanField(default=False, help_text='Verdadero, si en el caso de transferencia o transaccion los empaques fueron retornados/recibidos')),
            ],
        ),
        migrations.CreateModel(
            name='Tipo_empaque',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Tipo de empaque (ej. Cilindro, pallet, etc', max_length=30)),
                ('descripcion', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tipo_orden',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=20)),
                ('descripcion', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Ubicacion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bodega', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='empaques_app.Bodega')),
                ('estado_disp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='empaques_app.Estado_disponibilidad')),
            ],
        ),
        migrations.CreateModel(
            name='Representante_empresa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cedula', models.CharField(max_length=10)),
                ('nombre', models.CharField(max_length=30)),
                ('nombre_carta', models.CharField(blank=True, default='', max_length=45)),
                ('telefono', models.CharField(blank=True, max_length=10, null=True)),
                ('correos', models.ManyToManyField(to='empaques_app.Correo')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='empaques_app.Empresa')),
            ],
        ),
        migrations.CreateModel(
            name='OrdenEmpaquesDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aprobado', models.BooleanField(default=False)),
                ('entregado', models.BooleanField(default=False)),
                ('despachado', models.BooleanField(default=False)),
                ('empaque', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='empaques_app.Empaque')),
                ('orden', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='empaques_app.Orden')),
            ],
        ),
        migrations.AddField(
            model_name='orden',
            name='nueva_ubicacion',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='nueva_ubicacion', to='empaques_app.Ubicacion'),
        ),
        migrations.AddField(
            model_name='orden',
            name='nuevo_custodio',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='empaques_app.Custodio'),
        ),
        migrations.AddField(
            model_name='orden',
            name='tipo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='empaques_app.Tipo_orden'),
        ),
        migrations.AddField(
            model_name='orden',
            name='ubicacion_inicial',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ubicacion_inicial', to='empaques_app.Ubicacion'),
        ),
        migrations.AddField(
            model_name='empaque',
            name='estado',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='empaques_app.Estado_empaque'),
        ),
        migrations.AddField(
            model_name='empaque',
            name='marca',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='empaques_app.Marca'),
        ),
        migrations.AddField(
            model_name='empaque',
            name='modelo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='empaques_app.Modelo'),
        ),
        migrations.AddField(
            model_name='empaque',
            name='tipo_empaque',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='empaques_app.Tipo_empaque'),
        ),
        migrations.AddField(
            model_name='empaque',
            name='ubicacion',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='empaques_app.Ubicacion'),
        ),
        migrations.AddField(
            model_name='custodio',
            name='representante',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='representante', to='empaques_app.Representante_empresa'),
        ),
        migrations.AddField(
            model_name='custodio',
            name='vendedor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendedor', to='empaques_app.Representante_empresa'),
        ),
        migrations.AddField(
            model_name='bodega',
            name='ciudad',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='empaques_app.Ciudad'),
        ),
        migrations.CreateModel(
            name='EmpaquesUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tipo', models.CharField(blank=True, choices=[('CO', 'Comercial'), ('OP', 'Operaciones')], max_length=5, null=True)),
                ('bodega', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='empaques_app.Bodega')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
